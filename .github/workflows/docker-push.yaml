name: Build and Deploy Frontend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get short git hash
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build Docker image for jpeg-frontend
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          load: true
          tags: jpeg-frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:cache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:cache,mode=max

      # - name: Run Trivy vulnerability scanner
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     scan-type: image
      #     image-ref: jpeg-frontend:latest
      #     format: table
      #     exit-code: 1
      #     ignore-unfixed: true
      #     severity: CRITICAL,HIGH

      - name: Push Docker image
        run: |
          docker tag jpeg-frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:${{ steps.vars.outputs.sha_short }}
          docker tag jpeg-frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:latest
          
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:${{ steps.vars.outputs.sha_short }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:latest

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: jpeg-project
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Authenticate gcloud with service account
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > "${HOME}/gcloud-key.json"
          gcloud auth activate-service-account --key-file="${HOME}/gcloud-key.json"
          gcloud config set account $(gcloud auth list --filter=status:ACTIVE --format="value(account)")

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin --quiet

      - name: Configure kubectl
        run: |
          gcloud container clusters get-credentials jpeg-cluster \
            --region europe-west4 # Make sure this is your correct region/zone

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/frontend-deployment frontend=${{ secrets.DOCKERHUB_USERNAME }}/jpeg-frontend:${{ steps.vars.outputs.sha_short }} \
            --namespace=default