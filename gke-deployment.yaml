apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  labels:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      automountServiceAccountToken: false
      containers:
        - name: frontend
          image: dgeorgiev0348/jpeg-frontend:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: frontend-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: frontend-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: jpegapp-ssl-cert
spec:
  domains:
    - jpegapp.lol
    - www.jpegapp.lol
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jpegapp-ingress
  annotations:
    networking.gke.io/managed-certificates: jpegapp-ssl-cert
    kubernetes.io/ingress.global-static-ip-name: frontend-ip
spec:
  rules:
  - host: jpegapp.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
  - host: www.jpegapp.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-service
            port:
              number: 80
